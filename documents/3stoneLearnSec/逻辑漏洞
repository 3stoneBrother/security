逻辑漏洞：不完全的对象引用，和功能级访问控制缺失。
############
####网站的任何部分都有可能存在着逻辑错误漏洞###############
################
1、用户体系
2、在线支付
3、顺序执行
4、本地限制/抓包绕过
危害：
1、任意密码修改
2、越权访问
3、密码找回--》个人中心
4、交易支付金额任意修改
5、
#################
常见逻辑漏洞：交易支付，密码修改，密码找回，越权修改，越权查询，突破限制等各种逻辑漏洞；
水平越权：
A,B同为普通用户，他们之间彼此之间的个人资料应该相互保密的。\n\nA的资料如果被B用户利用程序访问控制的缺失而已查看，这就是平行权限的关系。
垂直越权：
A是普通用户，B是管理员，B的页面登录访问需要密码和token.\n\nA账号能直接输入管理页面URL的方式绕过管理员登录限制查看管理员页面，这个时候A,B就是垂直关系。
基本步骤：
1，先尝试正确操作流程，记录不同找回方式的所有数据包
2，分析数据包，找到有效数据部分
3，推测数据构造方法
4，构造数据包验证猜测
举例：
1、比如说，加入购物车，我是不是可以修改购买的数量，修改成负数，商品的价格是不是可以修改；
2、确认购物车信息时，是不是可以修改商品的数量为负数，是不是可以突破打折的限制；
3、输入运费，可不可以被修改；
4、确认订单后，能不能直接修改支付金额，可否不支付直接跳转到交易成功

用户凭证暴力破解：
四位或者六位的纯数字，无需验证码，直接burp爆破；
四位或者六位的纯数字，需要验证码，但是验证码没有及时撤销，也可以直接burp爆破；
如果验证不是很验过，burp抓包，在后面手机号后面添加特殊字符绕过第一次防御
防御 --- 对它提交的次数做过滤\n\n防御----只要尝试超过三次，就加入黑名单
返回凭证：
检测Burp返回的数据包，是否包含验证码，token，时间戳的md5，修改token为1或0，绕过凭证；


#################
密码找回功能中：
1、注册过程中，验证码没有做时间限制，可以无限点击，达到短信轰炸的目的。
   防御：1.1 设置时间判断，比如60s内限制发一条；
        1.2 验证码不要是4位数，一般验证码的有效时间是10分钟，如果使用burpsuite,intruder attack进行短信模糊测试验证，
        一般来讲5-6分钟就会跑完，即可爆破出正确密码。
2、修改密码后：cookie是否会更改，确定cookie生成的策略；
3、## 某些漏洞服务器直接将验证码返回json串中，也有返回到set_cookie中，密码找回问题的答案隐藏在HTML中；
   输入充值账号后，跳过验证步骤，直接访问重置密码页面；
   ### 绑定用户邮箱的时候，通过修改uid将其他用户的邮箱绑定为自己的，从而任意重置用户密码；
   #### 例如绑定微博账号的时候，先登录微博并且获取code，然后绑定code和UID的请求如下：
    thirdPartyType=1&uid=60570181&state=test&code=fb3a6454736e15534486c5a214067943
   ##### 通过修改uid可以绑定将自己的微博绑定到其他用户账号，然后通过微博登录就可以登录任意用户账号。
   ###### 没有验证username是否和mobilePhone一致，username=***&mobilePhone=***&randcodeAjax=6119，通过修改mobilePhone为自己的手机号接受验证码
   ####### 重置密码最后一步，重置账户通过用户传递的uid或者username控制，导致修改该UID即可重置其他用户密码
   @ 当前密码的校验和修改新密码是单独分开的两个包。所以可以理解为没有校验当前密码。修改密码的请求中如下：ssouid=***&passwd=***
修改该ssouid即可。
   @@ 重置密码最后一步是通过session获取用户名，然后再重置。而用户名是在重置密码第一步时与session进行绑定，那么如果重置密码的最后一步程序并没有验证该用户是够走完了验证流程，那么就可以通过重新绑定session为其他账号从而达到任意密码重置目的。

