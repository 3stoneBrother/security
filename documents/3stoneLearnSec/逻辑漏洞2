逻辑漏洞挖掘
1工具：抓包工具
2思路：复杂灵活
3核心：绕过真实身份认证或者正常业务流程达到预期目的。
4用户身份：认证
用户身份特性认证
本地认证
服务端认证
5业务流程：对业务流程熟悉程度（各类型的网站，业务模式）
根据具体的业务确定漏洞模型。
6逻辑漏洞类型：
支付漏洞：价格 数量，订单，结算，优惠券重复利用
一：订单
a，选择商品时修改商品价格
b，选择商品时将商品数量设置为负数
c，商品剩余1时，多人同时购买，是否产生冲突
d，商品为0时是否还能购买
e，生成订单时修改订单金额
二：结算相关
a，优惠打折活动多次重复使用
b，拦截数据包，修改订单金额
c，拦截数据包，修改支付方式
d，伪造虚假订单，刷单
三:支付漏洞突破口
a，拦截数据包，伪造第三方确认信息
b，保存用户付款信息被窃取？
c，绕过商家确认直接退货
d，绕过商品类型直接退货；（退货是否允许,比如虚拟商品，话费，金币之类的）
e，绕过客户验证直接确认收货
四：密码重置漏洞
用户密码找回方式
手机验证码、邮箱、密保问题、自动生成新密码、密码找回链接发送
密码找回
密码重置突破口：
a，认证凭证暴力破解
b，认证凭证回显
c，认证凭证重复使用
d，重新绑定
e，用户身份特性认证
f，服务器端认证
g，本地认证
h，密码找回流程绕过
五：任意用户登陆
a，空密码绕过（绕过前端改为空值）
b，身份替换（登陆成功产生session）
c，认证凭证绕过
六：认证缺陷漏洞
a，弱验证
b，空验证
c，认证凭证有效性&唯一性
七：越权漏洞
a，普通越权
b，未授权访问（登陆凭证验证）
c，绕过授权模式（参数构造）
八：接口枚舉：业务接口因为没有做验证或者验证机制缺陷，容易遭受枚举攻击
撞库，订单、优惠券遍历
九：案例分享：
支付漏洞：一分钱看电影，某商城任意积分兑换（积分不足无法兑换），某系统增值业务免费试用。
测试流程：确认支付的时候，截取返回包，在返回包中修改价格，然后再放包；相同价格增加订单数量，相同订单数量减少产品价格，订单价格设定负数；
支付中的敏感字段：rmb|value|amount|cash|fee|money
预防思路：
1、根据商品ID，订单金额等生成复杂hash值；

任意用户密码重置漏洞：认证凭证脆弱性（仅凭身份证号码重置密码，要有唯一性，有效性），认证凭证回显（抓包获取手机验证码），认证凭证控制控制绕过，绕过多重认证（验证码重复利用）。
任意用户登录漏洞：空密码绕过，认证凭证替换

任意用户登陆
认证缺陷（弱认证，认证凭证获取）
接口枚举
越权

修复建议：
权限绕过：
1.使用安全配置，对敏感服务接口使用白名单访问控制列表。
2.验证一切来自客户端的参数，重点是和权限相关的参数，比如用户ID或者角色权限ID等。
3.session ID 和认证的token做绑定，放在服务器的会话里，不发送给客户端。
4.对于用户登录后涉及用户唯一信息的请求，每次都要验证检查所有权，敏感信息页面加随机数的参数，防止浏览器缓存内容。
5.把程序分成匿名，授权和管理的区域，通过将角色和数据功能匹配。
6.不使用参数来区分管理员和普通用户
##利用建议
1、对敏感接口参数进行重点测试；
2、对权限有关对参数进行检测分析；
3、对涉及用户唯一信息的请求，进行验证检查所有圈；
4、确定是否利用参数确定管理员和普通用户；

## cookie中参数过多的情况
1、确定那些参数是在验证的，根据响应结果；确定参数是否跟时间戳有关，如果没有，存在的缺陷是生成一次后，可永久使用；对参数位数
   减少确定是否影响结果；
2、用QQ登陆需设置密码，当请求参数中不用老密码时候，把老用户的修改密码的包替换为QQ用户设置密码的包，可以绕过老密码来达到新密码的目的。
3、两个参数：token和uid，通过修改uid参数，可做到增删改查，就是存在问题；
4、没有验证验证码接受手机号是否与username或着session一致，eg. username=***&mobilePhone=***&randcodeAjax=6119
   没有验证username是否和mobilePhone一致，通过修改mobilePhone为自己的手机号接受验证码。
   ## 如果有多个参数的时候，可能存在多个参数没有全部验证的情况，修改某个参数，影响结果；测试过程中，确定有效参数，分别修改每个参数的值，确定是否一一进行关联验证；
5、客户端在本地进行验证码是否正确的判断，而该判断结果也可以在本地修改，最终导致欺骗客户端，误以为我们已经输入了正确的验证码。
   例如将返回包中的0修改为1即可绕过验证；
6、针对收货地址的增删改查
7、修改密码流程中，输入账号admin，修改响应包（修改为测试用的正确响应），放包，然后再修改响应包，请求参数获取结果；
