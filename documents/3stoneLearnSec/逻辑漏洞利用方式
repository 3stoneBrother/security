常见利用方式：
#site
在搜索引擎中，使用site:查询相关域名信息；
#域名爆破
通过爆破发现更多的二级三级域名，然后导出域名列表通过脚本查看域名banner名称；
#端口及banner扫描
#whois信息查询
whois查询某域名所有人还拥有那些域名等信息；
# 账号登录回显与注册
该用户不存在、该用户已注册，这无疑是一个变相的撞库漏洞
# 明文密码登录
使用明文或MD5及一些容易破解的加密方式作为密码加密方式
# 账号及其它个人信息篡改
通过抓包方式对账号信息进行拦截，如手机号、uid、邮箱、token，篡改后提交数据包，从而达到登录别人账号的目的
# 密码重置
常见的密码重置绕过方式有数字验证码绕过，比如4位数字，通过爆破进行；有的通过修改返回结果，如把false改成true。还有的可以构造密码重置链接。
订单遍历

# 前台订单
前台订单遍历指在查看订单时发现订单id为一串有规律的数字，这时可能通过变换id数字就可以查看他人订单信息了

# 后台订单
在前端展现的时候，每个用户只能查看系统分配给自己的一些订单信息。但是通过burp抓包进行fuzz时，多数都可越权查看其它账户下的订单信息，这就成了一个变相的脱裤。

# 前后端订单遍历
当我们在某外卖提交订单时，信息里面会包含一个订单号，而这个订单需要一个商家端来接单。商家端接单时可以抓包，然后就可以进行订单遍历了。当然，前提是你得有一个商家端。

支付场景：
# 金额篡改
下单时，通过拦截篡改支付额度后提交请求，一般会看到出其不意的效果，如把订单金额改小、改成负数。
造成这一现象的原因是服务器端对金额未做二次校验
# 充值
一种是少充多得，比如充值100元时通过篡改金额改成10元，最终充值完毕后账户变成了100元，而实际付款却只有10元；
另一种是绕过活动页金额限制，比如很多公司做活动强制用户充值金额不能低于10000，而通过拦截修改金额，可以充值任意金额。
# 提现
提现一般也是由于服务器端参数校验不严格，会经常存在一些信息泄露、无限提款的漏洞。一般提现时，我们可以通过篡改提现额度、银行卡号来实现。防护手段是手机号、姓名、银行卡账户、额度四个统一。


##########################################
1、0x01 任意用户密码重置正文
   利用场景：密码找回的凭证太弱，为4位或6位纯数字，并且失效过长。
   payload：利用burpsuite爆破从而重置密码；




